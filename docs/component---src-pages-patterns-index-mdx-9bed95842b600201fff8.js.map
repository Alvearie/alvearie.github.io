{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/patterns/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","Row","Column","ResourceCard","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","colMd","colLg","noGutterMdLeft","actionIcon","color","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-patterns-index-mdx-9bed95842b600201fff8.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Alvearie/alvearie.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ResourceCard = makeShortcode(\"ResourceCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Health patterns are cloud agnostic reference implementations for the overall\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://alvearie.io/architecture\"\n      }}>{`Alvearie architecture`}</a>{` that incorporate best practices using open technologies.`}</p>\n    <p>{`Below are the initial patterns that incorporate parts of Alvearie along with other open technologies that can be\nused to start building your own healthcare solutions using a common base of proven technology.`}</p>\n    <Row mdxType=\"Row\">\n      <Column colMd={2} colLg={3} noGutterMdLeft mdxType=\"Column\">\n        <ResourceCard actionIcon=\"launch\" color=\"dark\" title=\"Clinical Data Ingestion\" href=\"https://github.com/Alvearie/health-patterns/tree/main/clinical-ingestion\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={6} colLg={9} noGutterMdLeft mdxType=\"Column\">\n        <p>{`The `}<em parentName=\"p\">{`Clinical Ingestion`}</em>{` health pattern with optional `}<em parentName=\"p\">{`Enrichment`}</em>{` is a cloud agnostic (has been run on IBM Cloud, AWS, Azure, Google), flexible approach to processing healthcare data and storing it into a FHIR server.\nAt the most basic level, the Ingestion pattern will read HL7 or FHIR data from a `}<a parentName=\"p\" {...{\n            \"href\": \"https://kafka.apache.org\"\n          }}>{`Kafka`}</a>{` topic and use `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/apache/nifi\"\n          }}>{`NiFi`}</a>{` to orchestrate any desired conversion or validation, and then store the results into the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm/fhir\"\n          }}>{`FHIR Server`}</a></p>\n        <p>{`Within the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/apache/nifi\"\n          }}>{`NiFi`}</a>{` canvas, the `}<em parentName=\"p\">{`Clinical Ingestion`}</em>{` health pattern will:`}</p>\n        <ul>\n          <li parentName=\"ul\">{`Convert `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/LinuxForHealth/hl7v2-fhir-converter\"\n            }}>{`HL7 to FHIR using technology from LinuxForHealth`}</a></li>\n          <li parentName=\"ul\">{`Validate the FHIR data without storing it in the FHIR Server`}</li>\n          <li parentName=\"ul\">{`Put the converted/validated data on a Kafka topic for processing by the `}<em parentName=\"li\">{`Enrichment`}</em>{` pattern`}</li>\n          <li parentName=\"ul\">{`Store the FHIR bundle into the `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/ibm/fhir\"\n            }}>{`FHIR Server`}</a></li>\n          <li parentName=\"ul\">{`Handle errors:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`In case of errors within the bundle, individual resources are retried`}</li>\n              <li parentName=\"ul\">{`Errors are reported back to the data integrator via the kafka topic`}</li>\n            </ul>\n          </li>\n        </ul>\n        <p>{`Get started using the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/health-patterns/tree/main/clinical-ingestion\"\n          }}>{`clinical data ingestion & enrichment pattern today`}</a></p>\n        <p />\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column colMd={2} colLg={3} noGutterMdLeft mdxType=\"Column\">\n        <ResourceCard actionIcon=\"launch\" color=\"dark\" title=\"Clinical Data Enrichment\" href=\"https://github.com/Alvearie/health-patterns/tree/main/clinical-ingestion\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={6} colLg={9} noGutterMdLeft mdxType=\"Column\">\n        <p>{`The `}<em parentName=\"p\">{`Clinical Enrichment`}</em>{` health pattern has been separated from the `}<em parentName=\"p\">{`Ingestion`}</em>{` pattern.  It is still available to be deployed and run as part of ingestion, but it can also be set up on its own.\nIf it is run as part of `}<em parentName=\"p\">{`Ingestion`}</em>{` it will Enrich the data as it comes into the environment, before it is stored in the FHIR Server.  It can also be run after the data is persisted in the FHIR server and configured to run on new or changed data.\nThe goal for this `}<em parentName=\"p\">{`Enrichment`}</em>{` pattern is that the enriched data will be written to a FHIR server by default, but because these patterns are just reference implementations, they can be modified and consumed in a number of ways.`}</p>\n        <p><em parentName=\"p\">{`Enrichment`}</em>{` will read FHIR data from a `}<a parentName=\"p\" {...{\n            \"href\": \"https://kafka.apache.org\"\n          }}>{`Kafka`}</a>{` topic and use `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/apache/nifi\"\n          }}>{`NiFi`}</a>{` to orchestrate the optional types of enrichment such as:`}</p>\n        <ul>\n          <li parentName=\"ul\">{`Convert terminology using the FHIR Terminology Services`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/Alvearie/de-identification\"\n            }}>{`De-identify`}</a>{` the FHIR data`}</li>\n          <li parentName=\"ul\">{`Run an algorithm such as `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/Alvearie/health-analytics/tree/main/ascvd\"\n            }}>{`ASCVD`}</a></li>\n          <li parentName=\"ul\">{`Run NLP against the unstructured data such as `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.hl7.org/fhir/documentreference.html\"\n            }}>{`FHIR DocumentReference`}</a></li>\n        </ul>\n        <p>{`The flexibility of this approach allows the consumer to use enrichment at the appropriate time.  For instance, some of the enrichment could happen at Ingestion time (FHIR Terminology for  instance) prior to storing the data, but after the data is persisted in the FHIR Server, Enrichment can run again to only run NLP and/or an analtyic algorithm.`}</p>\n        <p>{`To get started today, use the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/health-patterns/tree/main/clinical-ingestion\"\n          }}>{`clinical data ingestion & enrichment pattern today`}</a>{` but watch this space - the `}<em parentName=\"p\">{`Enrichment`}</em>{` pattern will be available separately soon.`}</p>\n        <p />\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column colMd={2} colLg={3} noGutterMdLeft mdxType=\"Column\">\n        <ResourceCard actionIcon=\"launch\" color=\"dark\" title=\"Quality Measure & Cohorting \" href=\"https://github.com/Alvearie/health-patterns/tree/main/cohort-service\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={6} colLg={9} noGutterMdLeft mdxType=\"Column\">\n        <p>{`The `}<em parentName=\"p\">{`Clinical Data Cohorting`}</em>{` pattern provides a reference implementation that uses the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/quality-measure-and-cohort-service\"\n          }}>{`quality measure & cohort service`}</a>{` to find patients within the FHIR server that match a given cohort as defined using `}<a parentName=\"p\" {...{\n            \"href\": \"https://cql.hl7.org\"\n          }}>{`CQL`}</a>{`.`}</p>\n        <p>{`Get started using the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/health-patterns/tree/main/cohort-service\"\n          }}>{`cohorting pattern today`}</a></p>\n        <p />\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column colMd={2} colLg={3} noGutterMdLeft mdxType=\"Column\">\n        <ResourceCard actionIcon=\"launch\" color=\"dark\" title=\"Clinical Data Access\" href=\"https://github.com/Alvearie/health-patterns/tree/main/data-access\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={6} colLg={9} noGutterMdLeft mdxType=\"Column\">\n        <p>{`The `}<em parentName=\"p\">{`Clinical Data Access`}</em>{` pattern shows how to configure access to the FHIR server for traditional access methods, in particular how to configure the FHIR server for `}<a parentName=\"p\" {...{\n            \"href\": \"https://smarthealthit.org/\"\n          }}>{`SMART on FHIR`}</a>{` using `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.keycloak.org/\"\n          }}>{`Keycloak`}</a>{` and the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/keycloak-extensions-for-fhir\"\n          }}>{`Keycloak extensions for FHIR`}</a></p>\n        <p>{`Get started using the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/Alvearie/health-patterns/tree/main/data-access\"\n          }}>{`Data Access pattern today`}</a></p>\n        <p />\n      </Column>\n    </Row>\n    <Row mdxType=\"Row\">\n      <Column colMd={2} colLg={3} noGutterMdLeft mdxType=\"Column\">\n        <ResourceCard actionIcon=\"none\" color=\"dark\" title=\"Clinical Data Analytics - Coming Soon\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={6} colLg={9} noGutterMdLeft mdxType=\"Column\">\n        <p>{`The `}<em parentName=\"p\">{`Clinical Data Analytics`}</em>{` reference implementation will incorporate various types of analytics using Kubeflow.  To begin, we will incorporate all of the analytics found in the `}<em parentName=\"p\">{`Enrichment`}</em>{` pattern into Kubeflow by calling the same set of Microservices that were used by Enrichment.`}</p>\n        <p>{`We will have examples of `}</p>\n        <ul>\n          <li parentName=\"ul\">{`Using single patient data from the FHIR server to score against a model`}</li>\n          <li parentName=\"ul\">{`Bulk export data from the FHIR Server, transform the data and run the model/analytic in Kubeflow pipelines against multiple patients`}</li>\n          <li parentName=\"ul\">{`Bulk export data from the FHIR Server and transform it to train a new model`}</li>\n          <li parentName=\"ul\">{`Serving an existing trained model`}</li>\n        </ul>\n        <p />\n      </Column>\n    </Row>\n    <p />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2EvBK\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--5mCgN\",\"link\":\"EditLink-module--link--QlquD\",\"row\":\"EditLink-module--row--104Au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--3BhKg\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3k3x1\",\"tabsContainer\":\"PageTabs-module--tabs-container--3ku4u\",\"list\":\"PageTabs-module--list--Zs80A\",\"listItem\":\"PageTabs-module--list-item--UVTiB\",\"link\":\"PageTabs-module--link--TAIyd\",\"selectedItem\":\"PageTabs-module--selected-item--2Kv-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--2SjuB\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3jsoz\",\"pageHeader\":\"PageHeader-module--page-header--365gs\",\"darkMode\":\"PageHeader-module--dark-mode--1Y-8D\",\"withTabs\":\"PageHeader-module--with-tabs--2y_Tu\",\"text\":\"PageHeader-module--text--3r6mD\"};"],"sourceRoot":""}