{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/blog/cohort-quality-measure-service/index.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-blog-cohort-quality-measure-service-index-mdx-f0093f809f9fb0ec5c56.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h2 id=\"page-title\" className={styles.text}>\n            {title}\n          </h2>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2EvBK\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--5mCgN\",\"link\":\"EditLink-module--link--QlquD\",\"row\":\"EditLink-module--row--104Au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--3BhKg\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3k3x1\",\"tabsContainer\":\"PageTabs-module--tabs-container--3ku4u\",\"list\":\"PageTabs-module--list--Zs80A\",\"listItem\":\"PageTabs-module--list-item--UVTiB\",\"link\":\"PageTabs-module--link--TAIyd\",\"selectedItem\":\"PageTabs-module--selected-item--2Kv-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--2SjuB\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3jsoz\",\"pageHeader\":\"PageHeader-module--page-header--365gs\",\"darkMode\":\"PageHeader-module--dark-mode--1Y-8D\",\"withTabs\":\"PageHeader-module--with-tabs--2y_Tu\",\"text\":\"PageHeader-module--text--3r6mD\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/TomEggebraaten/git/alvearie.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`By Rick Stevens `}{` `}{` `}{` | `}{` `}{` `}{` Published June 3, 2021`}</p>\n    <p>{`Clinical Quality Language (`}<a parentName=\"p\" {...{\n        \"href\": \"https://cql.hl7.org/\"\n      }}>{`CQL`}</a>{`) is an emerging HL7 specification for capturing clinical logic and knowledge to drive a variety of important\nhealth care use cases including those that deal with:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Clinical Decision Support (CDS). These are use cases which focus on identifying optimal care recommendations for patients that match a particular\nset of clinical characteristics. In this type of use case, CQL would be used to identify a sub-population of patients that would be associated with\nexpert guidance on best standard of care that should be provided to these patients.`}</li>\n      <li parentName=\"ul\">{`Electronic Clinical Quality Measures (eCQM). Use cases focusing on measurement and reporting on quality of care to quantify and drive continuous\nimprovement in cost and quality of healthcare for various patient sub-populations. The Centers for Medicare and Medicaid Services (CMS) use eCQMs in\na variety of quality reporting and value-based purchasing programs. An example measure published by CMS is `}<a parentName=\"li\" {...{\n          \"href\": \"https://ecqi.healthit.gov/ecqm/ep/2022/cms349v4\"\n        }}>{`CMS349v4`}</a>{` which defines a measure focused\non percentage of patients between 15 and 65 that have been tested for HIV. Both the patient population the measure is relevant for and sub-population\nthat has been tested for HIV is defined using CQL as part of this eCQM.`}</li>\n    </ul>\n    <h3>{`Introducing IBM Cohort and Quality Measure Service`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://alvearie.io/quality-measure-and-cohort-service\"\n      }}>{`IBM Cohort and Quality Measure Service`}</a>{` (aka IBM Cohort Service) is an open,\nJava-based service supporting evaluation of clinical logic expressed as CQL and quality measures composed from CQL-based cohort definitions\nagainst patient data represented as `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.hl7.org/fhir/R4/\"\n      }}>{`HL7 FHIR`}</a>{`. IBM Cohort Service builds upon and extends a number of other open\nsource initiatives oriented around support for CQL including `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/DBCG/cql_engine\"\n      }}>{`CQL Engine`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cqframework/clinical_quality_language\"\n      }}>{`Clinical Quality Language`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/DBCG/cqf-ruler\"\n      }}>{`cqf ruler`}</a>{`.`}</p>\n    <h3>{`IBM Cohort Service Release 1 Focus Areas`}</h3>\n    <p>{`Release 1.0 of the IBM Cohort Service focuses on delivering an initial set of capabilities that span the cohort and quality measure development and\ndeployment lifecycle. These capabilities include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Ability to evaluate both CQL-defined logic and FHIR-based Measure definitions that are based on CQL against patient data that is maintained in a FHIR server.`}</li>\n      <li parentName=\"ul\">{`Utilities for deploying FHIR Measure, CQL library and value set definitions to a FHIR server that serves as a repository to manage these artifacts.`}</li>\n      <li parentName=\"ul\">{`An initial set of measure execution runtime performance optimizations focused on inter-measure performance improvement. These optimizations take advantage of caching patient data for use when evaluating a set of quality measures against a given patient.`}</li>\n    </ul>\n    <p>{`IBM Cohort Service provides a number of different interfaces to integrate IBM Cohort Service into a larger enterprise solution:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Java APIs that can be used to embed the cohort and measure evaluation function into another application or solution`}</li>\n      <li parentName=\"ul\">{`Command line interfaces to facilitate cohort and measure test automation as well as support for integrating cohort service use into a continuous integration and deployment pipeline`}</li>\n      <li parentName=\"ul\">{`REST API to facilitate integration of cohort evaluation and test function into other web-based applications`}</li>\n    </ul>\n    <h3>{`Learn By Example`}</h3>\n    <p>{`A great example illustrating the use of IBM Cohort Service with IBM FHIR server can be found within the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Alvearie/health-patterns/tree/main/cohort-service\"\n      }}>{`Alvearie Health Patterns`}</a>{` project.\nThis example shows how to use FHIR server as a repository to store and update CQL library definitions and demonstrates\nhow IBM Cohort Service can be used to evaluate clinical logic represented in CQL against a set of patient data stored in FHIR.`}</p>\n    <h3>{`More To Come…`}</h3>\n    <p>{`This is our initial foray aimed at supporting this important new standard that will drive future work on clinical decision support and\nquality management solutions in healthcare. Future work on IBM Cohort Service will focus on additional optimization of CQL execution,\nthe ability to scale execution of CQL evaluation to deal with large patient populations and the ability to deal with other types of underlying\ndata models that are in use for healthcare analytics.`}</p>\n    <p>{`We look forward to your use and feedback on this initial release as well as your input and contributions to guide future\nenhancements to the IBM Cohort Service project.`}</p>\n    <p>{`See our `}<a parentName=\"p\" {...{\n        \"href\": \"https://alvearie.io/quality-measure-and-cohort-service/#/user-guide/getting-started\"\n      }}>{`Getting Started`}</a>{` guide for more information on how to get started!`}</p>\n    <p />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}